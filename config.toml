# This file is part of .cargo. It is subject to the license terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/lemonrock/.cargo/master/COPYRIGHT. No part of rust1, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2016 The developers of .cargo. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/lemonrock/.cargo/master/COPYRIGHT.

[term]
verbose = true
color = "auto"

[build]

# Equivalent to MacPro 'TrashCan' native CPU of ivybridge.
# Supports only AVX.
[target.x86_64-unknown-linux-musl]
linker = "x86_64-linux-musl-cc"
ar = "x86_64-linux-musl-ar"
rustflags = [
    "-C", "target-cpu=ivybridge",
    "-C", "target-feature=+crt-static,+prefer-256-bit",
]

# Supports most of AVX2.
[target.x86_64-unknown-linux-musl-znver2]
linker = "x86_64-linux-musl-cc"
ar = "x86_64-linux-musl-ar"
rustflags = [
    "-C", "target-cpu=znver2",
    "-C", "target-feature=+crt-static,+prefer-256-bit",
]

# Enables the `avx512f` and `avx512cd` target features.
[target.x86_64-unknown-linux-musl-skylake]
linker = "x86_64-linux-musl-cc"
ar = "x86_64-linux-musl-ar"
rustflags = [
    "-C", "target-cpu=skylake-avx512",
    "-C", "target-feature=+crt-static,+prefer-256-bit",
]

# Enables the `avx512f`, `avx512cd`, `avx512vl`, `avx512dq` and `avx512bw` target features.
[target.x86_64-unknown-linux-musl-skylake-x]
linker = "x86_64-linux-musl-cc"
ar = "x86_64-linux-musl-ar"
rustflags = [
    "-C", "target-cpu=skx",
    "-C", "target-feature=+crt-static,+prefer-256-bit",
]

# Enables the `avx512f`, `avx512cd`, `avx512vl`, `avx512dq`, `avx512bw`, `avx512ifma` and `avx512vbmi` target features.
#
# A slight superset of Skylake-X.
[target.x86_64-unknown-linux-musl-cannon-lake]
linker = "x86_64-linux-musl-cc"
ar = "x86_64-linux-musl-ar"
rustflags = [
    "-C", "target-cpu=cannonlake",
    "-C", "target-feature=+crt-static,+prefer-256-bit",
]

# Enables the `avx512f`, `avx512cd`, `avx512vl`, `avx512dq`, `avx512bw` and `avx512vnni` target features.
#
# A slight superset of Skylake-X, not Cannon Lake.
[target.x86_64-unknown-linux-musl-cascade-lake]
linker = "x86_64-linux-musl-cc"
ar = "x86_64-linux-musl-ar"
rustflags = [
    "-C", "target-cpu=cascadelake",
    "-C", "target-feature=+crt-static,+prefer-256-bit",
]

# Enables the `avx512f`, `avx512cd`, `avx512vl`, `avx512dq`, `avx512bw`, `avx512vnni` and `avx512bf16` target features.
#
# A slight superset of Cascade Lake; only CPU microarchitecture as of writing that has the `avx512bf16` target feature.
[target.x86_64-unknown-linux-musl-cooper-lake]
linker = "x86_64-linux-musl-cc"
ar = "x86_64-linux-musl-ar"
rustflags = [
    "-C", "target-cpu=cooperlake",
    "-C", "target-feature=+crt-static,+prefer-256-bit",
]

# Enables the `avx512f`, `avx512cd`, `avx512vl`, `avx512dq`, `avx512bw`, `avx512ifma`, `avx512vbmi`, `avx512vpopcntdq`, `avx512vnni`, `avx512vbmi2` and `avx512bitalg` (a super set of `avx512vpopcntdq`) target features as well as the `avx512gfni`, `avx512vpcmulqdq` and `avx512aes` target features (which are not strictly AVX-512 features).
#
# A signifcant superset of Cascade Lake, NOT Cooper Lake.
[target.x86_64-unknown-linux-musl-ice-lake]
linker = "x86_64-linux-musl-cc"
ar = "x86_64-linux-musl-ar"
rustflags = [
    "-C", "target-cpu=icelake-server",
    "-C", "target-feature=+crt-static,+prefer-256-bit",
]

# Enables the `avx512f`, `avx512cd`, `avx512vl`, `avx512dq`, `avx512bw`, `avx512ifma`, `avx512vbmi`, `avx512vpopcntdq`, `avx512vnni`, `avx512vbmi2`, `avx512bitalg` (a super set of `avx512vpopcntdq`) and `avx512vp2intersect` target features as well as the `avx512gfni`, `avx512vpcmulqdq` and `avx512aes` target features (which are not strictly AVX-512 features).
#
# A slight superset of Ice Lake.
[target.x86_64-unknown-linux-musl-tiger-lake]
linker = "x86_64-linux-musl-cc"
ar = "x86_64-linux-musl-ar"
rustflags = [
    "-C", "target-cpu=tigerlake",
    "-C", "target-feature=+crt-static,+prefer-256-bit",
]